{"version":3,"sources":["Functions.js","redexclamation.svg","Home.js","Chart.js","Guild.js","App.js","index.js"],"names":["numberWithCommas","x","Math","round","toString","replace","Footer","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","React","Component","Loading","_React$Component2","xmlns","class","width","height","viewBox","preserveAspectRatio","cx","cy","fill","stroke","strokeWidth","r","strokeDasharray","attributeName","type","repeatCount","dur","values","keyTimes","TimeDelta","str","days","includes","_str$split","split","_str$split2","slicedToArray","daystr","rest","parseInt","_this$rest$split$reve","reverse","_this$rest$split$reve2","seconds","minutes","hours","concat","toNiceString","Date","now","toMS","toSeconds","getMultiplier","members","sin","_polygon","_rect","_ellipse","_extends","assign","bind","target","i","length","source","prototype","hasOwnProperty","call","redexclamation_SvgComponent","props","id","xmlnsXlink","shapeRendering","textRendering","points","transform","rx","ry","__webpack_require__","p","NavigationBar","src","alt","StatsHeader","_this","state","guildsTracked","playersTracked","isLoaded","Helmet","charSet","property","content","_this2","fetch","then","res","json","result","setState","guilds_tracked","players_tracked","error","console","log","Guild","element","navigate","useNavigate","scammers","tippy_react_esm","interactive","appendTo","document","body","duration","theme","style","color","onClick","position","name","actual_weight","average_weight","average_skills_index","average_skills","average_slayer_index","slayers","catacombs_index","catacombs","capture_date","Guilds","_this3","guildsJson","sortOn","sortReversed","useMultiplier","sortedOnSlayer","sortedOnAverageSkill","sortedOnCatacombs","guild_data","slice","sort","b","_this4","Functions_Loading","guilds","_loop","guild_json","push","Home_Guild","guild_name","guild_id","players","average_slayer","findIndex","guild","average_catacombs","time_difference","onSortClick","_this5","forEach","Home","Home_NavigationBar","Home_StatsHeader","Home_Guilds","Functions_Footer","CustomChart","options","chart","title","zoom","enabled","animations","curve","xaxis","categories","labels","colors","yaxis","formatter","text","align","fontSize","dataLabels","markers","size","series","data","react_apexcharts_min_default","CustomChart2","legend","StatBlockTop","tippy","GuildHeader","guild_discord","backButton","guildJson","selectedPage","discord","Guild_StatBlockTop","strokeLinecap","strokeLinejoin","d","Player","dropdown","player_data","ref","useRef","reference","hideOnClick","trigger","window","open","scam_reason","followCursor","plugins","Fragment","weight","average_skill","total_slayer","catacomb","Players","players_data","Guild_Player","uuid","Metrics","updateDimensions","innerWidth","innerHeight","inline","guild_sorted_data","screen","Chart_CustomChart","member_count","addEventListener","removeEventListener","JoinLog","toNiceStringWDays","JoinLogs","logsElements","date","joined","Guild_JoinLog","left","CompareGuilds","tags","suggestions","all_series","autoCompleteLoaded","change","reactTags","createRef","splice","tag","guildid","metricsIsLoaded","wanted_key","return_data","item","ReactTags_umd_default","noSuggestionsText","onDelete","onAddition","placeholderText","Chart_CustomChart2","getSeries","_this6","location","_this7","playerGuildJson","playersIsLoaded","metricsGuildJson","historyGuildJson","historyIsLoaded","selected","Guild_Players","loadMetrics","Guild_Metrics","loadHistory","Guild_JoinLogs","Guild_CompareGuilds","_this8","Guild_GuildHeader","handleSwitchClick","disabled","renderComponent","_this9","paths","guild_metrics","guild_metric","timestamp","getDate","toLocaleString","month","_this10","_this11","App","react_router","path","src_Home","src_Guild","ReactDOM","createRoot","getElementById","render","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.3f75e76c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function numberWithCommas(x) {\r\n\tx = Math.round(x * 100) / 100\r\n\tif (x >= 1000) {\r\n\t\treturn x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n\t} else {\r\n\t\treturn x\r\n\t}\r\n}\r\nexport class Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer className='py-6 text-sm text-center text-white rounded-t-[50px] h-max bg-primary'>\r\n        <div>\r\n          Inspired by{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://hypixel-leaderboard.senither.com'\r\n          >\r\n            Senither's Hypixel Skyblock Leaderboard\r\n          </span>\r\n          .\r\n        </div>\r\n        <div>\r\n          Created by{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://github.com/timnoot'\r\n          >\r\n            timnoot#4372\r\n          </span>\r\n          ,{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://github.com/XoutDragon'\r\n          >\r\n            XoutDragon#2466\r\n          </span>\r\n          , and{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://github.com/MooshiMochi'\r\n          >\r\n            Mooshi#6669\r\n          </span>\r\n          .\r\n        </div>\r\n        <div>\r\n          Powered by{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://apexcharts.com'\r\n          >\r\n            Apexcharts\r\n          </span>\r\n          ,{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://tailwindcss.com'\r\n          >\r\n            TailwindCSS\r\n          </span>\r\n          ,{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://tippyjs.bootcss.com'\r\n          >\r\n            TippyJS\r\n          </span>\r\n          , and{' '}\r\n          <span\r\n            className='text-blue-500 underline hover:cursor-pointer'\r\n            href='https://digitalocean.com'\r\n          >\r\n            Digital Ocean\r\n          </span>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n};\r\n\r\nexport class Loading extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='text-[3em] font-semibold text-white'>\r\n\t\t\t\t<svg\r\n\t\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t\t\tclass='mx-auto'\r\n\t\t\t\t\twidth='64px'\r\n\t\t\t\t\theight='64px'\r\n\t\t\t\t\tviewBox='0 0 100 100'\r\n\t\t\t\t\tpreserveAspectRatio='xMidYMid'\r\n\t\t\t\t>\r\n\t\t\t\t\t<circle\r\n\t\t\t\t\t\tcx='50'\r\n\t\t\t\t\t\tcy='50'\r\n\t\t\t\t\t\tfill='none'\r\n\t\t\t\t\t\tstroke='#0a0a0a'\r\n\t\t\t\t\t\tstrokeWidth='10'\r\n\t\t\t\t\t\tr='35'\r\n\t\t\t\t\t\tstrokeDasharray='164.93361431346415 56.97787143782138'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<animateTransform\r\n\t\t\t\t\t\t\tattributeName='transform'\r\n\t\t\t\t\t\t\ttype='rotate'\r\n\t\t\t\t\t\t\trepeatCount='indefinite'\r\n\t\t\t\t\t\t\tdur='1s'\r\n\t\t\t\t\t\t\tvalues='0 50 50;360 50 50'\r\n\t\t\t\t\t\t\tkeyTimes='0;1'\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</circle>\r\n\t\t\t\t</svg>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport class TimeDelta {\r\n\tconstructor(str) {\r\n\t\tthis.days = 0;\r\n\t\tif (str.includes(\", \")) {\r\n\t\t\t[this.daystr, this.rest] = str.split(\", \")\r\n\t\t\tthis.days = parseInt(this.daystr.split(' ')[0]);\r\n\t\t} else {\r\n\t\t\tthis.rest = str;\r\n\t\t}\r\n\r\n\t\t[this.seconds, this.minutes, this.hours] = this.rest.split(':').reverse();\r\n\t\tthis.seconds = parseInt(this.seconds); // Imagine looping\r\n\t\tthis.minutes = parseInt(this.minutes);\r\n\t\tthis.hours = parseInt(this.hours);\r\n\t}\r\n\ttoString() {\r\n\t\treturn `${this.hours}:${this.minutes}:${this.seconds}`;\r\n\t}\r\n\ttoNiceString() {\r\n\t\tif (this.hours > 1) {\r\n\t\t\treturn `${this.hours} hours ago`;\r\n\t\t} else {\r\n\t\t\treturn `${this.minutes} minutes ago`;\r\n\t\t}\r\n\t}\r\n\r\n\ttoNiceStringWDays() {\r\n\t\tif (this.days > 0) {\r\n\t\t\treturn `${this.days} days ago`;\r\n\t\t} else {\r\n\t\t\treturn this.toNiceString();\r\n\t\t}\r\n\t}\r\n\ttoLongDate() {\r\n\t\treturn new Date(Date.now() - this.toMS());\r\n\t}\r\n\r\n\ttoSeconds() {\r\n\t\treturn this.seconds + this.minutes * 60 + this.hours * 3600 + this.days * 86400;\r\n\t}\r\n\ttoMS() {\r\n\t\treturn this.toSeconds() * 1000;\r\n\t}\r\n}\r\n\r\nexport function getMultiplier(members) {\r\n\tlet frequency = Math.sin(members / (125 / 0.927296)) + 0.2\r\n\treturn members / 125 + (1 - members / 125) * frequency\r\n}\r\n","var _polygon, _rect, _ellipse;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar SvgComponent = function SvgComponent(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"exjcCqeLS7n1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 64 64\",\n    shapeRendering: \"geometricPrecision\",\n    textRendering: \"geometricPrecision\"\n  }, props), _polygon || (_polygon = /*#__PURE__*/React.createElement(\"polygon\", {\n    points: \"13.606195,-18.393805 36.233612,-9.021221 45.606195,13.606196 36.233612,36.233613 13.606195,45.606195 -9.021222,36.233613 -18.393805,13.606196 -9.021222,-9.021221 13.606195,-18.393805\",\n    transform: \"matrix(.92388 0.382683-.382683 0.92388 24.63638 14.222649)\",\n    fill: \"#d54e4e\",\n    stroke: \"#e6d2d2\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 6.4,\n    height: 6.4,\n    rx: 0,\n    ry: 0,\n    transform: \"matrix(.781252 0 0 3.591414 29.499994 14.681724)\",\n    fill: \"#fff\",\n    strokeWidth: 0\n  })), _ellipse || (_ellipse = /*#__PURE__*/React.createElement(\"ellipse\", {\n    rx: 3.75,\n    ry: 3.75,\n    transform: \"translate(32 44.245869)\",\n    fill: \"#fff\",\n    strokeWidth: 0\n  })));\n};\n\nexport default __webpack_public_path__ + \"static/media/redexclamation.447c6174.svg\";\nexport { SvgComponent as ReactComponent };","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport {\r\n  TimeDelta,\r\n  Loading,\r\n  getMultiplier,\r\n  numberWithCommas,\r\n  Footer,\r\n} from './Functions.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ReactComponent as RedExclamation } from './redexclamation.svg';\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\nimport Tippy from '@tippyjs/react';\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n    <nav className='flex-wrap sm:flex sm:font-semibold justify-between px-5 sm:px-20 bg-secondary font-thin w-[100%]'>\r\n      <div className='w-10 sm:w-20'>\r\n        <a href='https://discord.gg/ej92B474Ej'>\r\n          <img\r\n            src='https://cdn.discordapp.com/icons/840150806682664970/39b968a6f46b5a7d48a2256d03caa6c6.webp'\r\n            alt='SkyHub Logo'\r\n          />\r\n        </a>\r\n      </div>\r\n      <div className='flex justify-between w-[100%] sm:w-[33%]'>\r\n        <div>\r\n          <a\r\n            className='text-white hover:text-primary'\r\n            href='https://discord.gg/ej92B474Ej'\r\n          >\r\n            Join Discord\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a\r\n            className='text-white hover:text-primary'\r\n            href='https://discord.gg/ej92B474Ej'\r\n          >\r\n            Support Us\r\n          </a>\r\n        </div>\r\n        <div>\r\n          <a\r\n            className='text-white hover:text-primary'\r\n            href='https://discord.gg/ej92B474Ej'\r\n          >\r\n            Buy Guild Ads\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nclass StatsHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      guildsTracked: 0,\r\n      playersTracked: 0,\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Helmet>\r\n          <meta charSet='utf-8' />\r\n          <meta property='og:title' content={'SkyBlock Guildleaderboard'} />\r\n          <meta\r\n            property='og:description'\r\n            content={`Tracking ${this.state.guildsTracked} guilds with ${this.state.playersTracked} players`}\r\n          />\r\n        </Helmet>\r\n        <h1 className='text-2xl text-center text-white bg-secondary sm:text-5xl'>\r\n          Hypixel Skyblock Guild leaderboard\r\n        </h1>\r\n        <h1 className='pt-4 text-center text-white sm:text-2xl'>\r\n          Tracking {this.state.guildsTracked} guilds with{' '}\r\n          {this.state.playersTracked} players\r\n        </h1>\r\n        <h1 className='text-center text-white sm:text-1xl pt-'>\r\n          Scammer Database provided by{' '}\r\n          <a\r\n            className='text-blue-500 underline'\r\n            href='https://discord.gg/skyblock'\r\n          >\r\n            SkyBlockZ\r\n          </a>\r\n        </h1>\r\n      </header>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.guildleaderboard.com/stats')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            guildsTracked: result.guilds_tracked,\r\n            playersTracked: result.players_tracked,\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nconst Guild = (props) => {\r\n  const navigate = useNavigate();\r\n  const goRouteId = () => {\r\n    navigate(`/guild/${props.id}`);\r\n  };\r\n  let element;\r\n\r\n  if (props.scammers > 0) {\r\n    element = (\r\n      <th className='pr-2'>\r\n        <Tippy\r\n          // options\r\n          // position=\"top\"\r\n          // animation={false}\r\n          interactive={true}\r\n          appendTo={document.body}\r\n          duration={0}\r\n          theme='tomato'\r\n          content={\r\n            <div className='block-inline'>\r\n              <a\r\n                className='text-blue-500 underline'\r\n                href='https://discord.gg/skyblock'\r\n              >\r\n                SkyBlockZ\r\n              </a>{' '}\r\n              found {props.scammers} scammers in this guild.\r\n            </div>\r\n          }\r\n        >\r\n          <RedExclamation style={{ height: '1.5em' }} />\r\n        </Tippy>\r\n      </th>\r\n    );\r\n  } else {\r\n    element = <th></th>;\r\n  }\r\n\r\n  return (\r\n    <tr\r\n      className={`${props.color} font-[Helvetica] hover:opacity-60 hover:cursor-pointer`} // text-[.9em] font-semibold\r\n      onClick={goRouteId}\r\n    >\r\n      <th className='px-1 sm:px-6'>{props.position}</th>\r\n      {element}\r\n      <th className='text-left'>{props.name}</th>\r\n      <th>\r\n        <span className='px-1 font-normal bg-yellow-500 rounded-md sm:px-1'>\r\n          {props.members}\r\n        </span>\r\n      </th>\r\n      <th>\r\n        <Tippy\r\n          content={`${numberWithCommas(\r\n            props.actual_weight\r\n          )} Weight with a multiplier of ${numberWithCommas(\r\n            getMultiplier(props.members)\r\n          )}`}\r\n        >\r\n          <span className='px-1 font-normal bg-purple-700 rounded-md sm:px-1'>\r\n            {numberWithCommas(props.average_weight)}\r\n          </span>\r\n        </Tippy>\r\n      </th>\r\n      <th>\r\n        <Tippy\r\n          content={`${props.name} is #${props.average_skills_index} in Average Skills`}\r\n        >\r\n          <span className='px-1 font-normal bg-blue-500 rounded-md sm:px-1'>\r\n            {props.average_skills}\r\n          </span>\r\n        </Tippy>\r\n      </th>\r\n      <th>\r\n        <Tippy\r\n          content={`${props.name} is #${props.average_slayer_index} in Slayers`}\r\n        >\r\n          <span className='px-1 font-normal bg-red-500 rounded-md sm:px-1'>\r\n            {numberWithCommas(Math.round(props.slayers))}\r\n          </span>\r\n        </Tippy>\r\n      </th>\r\n      <th>\r\n        <Tippy\r\n          content={`${props.name} is #${props.catacombs_index} in Catacombs`}\r\n        >\r\n          <span className='px-1 font-normal bg-green-400 rounded-md sm:px-1'>\r\n            {props.catacombs}\r\n          </span>\r\n        </Tippy>\r\n      </th>\r\n      <th className='sm:px-5'>{props.capture_date}</th>\r\n      <th></th>\r\n    </tr>\r\n  );\r\n};\r\n\r\nclass Guilds extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      guildsJson: [],\r\n      isLoaded: false,\r\n      sortOn: 'average_weight',\r\n      sortReversed: false,\r\n      useMultiplier: true,\r\n      sortedOnSlayer: [],\r\n      sortedOnAverageSkill: [],\r\n      sortedOnCatacombs: [],\r\n    };\r\n  }\r\n\r\n  onSortClick(sortOn) {\r\n    console.log(`Clicked ${sortOn}`);\r\n    if (this.state.sortOn === sortOn) {\r\n      this.setState({\r\n        sortReversed: !this.state.sortReversed,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sortOn: sortOn,\r\n        sortReversed: false,\r\n      });\r\n    }\r\n  }\r\n  sortOn(guild_data, sortOn) {\r\n    let r = guild_data.slice();\r\n    r.sort(function (a, b) {\r\n      return b[sortOn] - a[sortOn];\r\n    });\r\n    return r;\r\n  }\r\n\r\n  render() {\r\n    let guild_data = this.state.guildsJson.slice();\r\n    if (!this.state.isLoaded) {\r\n      return <Loading />;\r\n    }\r\n    let sortOn = this.state.sortOn;\r\n    let sortReversed = this.state.sortReversed;\r\n\r\n    guild_data.sort(function (a, b) {\r\n      if (sortReversed === true) {\r\n        return a[sortOn] - b[sortOn];\r\n      } else {\r\n        return b[sortOn] - a[sortOn];\r\n      }\r\n    });\r\n    let guilds = [];\r\n    for (const i in guild_data) {\r\n      let guild_json = guild_data[i];\r\n      // get the average_slayer, average_skills, average_catacombs index of the guild in the guild_data array\r\n      let color = i % 2 === 0 ? 'bg-tertiary' : '';\r\n      guilds.push(\r\n        <Guild\r\n          position={parseInt(i) + 1}\r\n          name={guild_json.guild_name}\r\n          id={guild_json.guild_id}\r\n          members={guild_json.players}\r\n          average_weight={guild_json.average_weight}\r\n          actual_weight={guild_json.actual_weight}\r\n          average_skills={guild_json.average_skills}\r\n          slayers={guild_json.average_slayer}\r\n          average_slayer_index={\r\n            this.state.sortedOnSlayer.findIndex(\r\n              (guild) => guild.guild_id === guild_json.guild_id\r\n            ) + 1\r\n          }\r\n          catacombs_index={\r\n            this.state.sortedOnCatacombs.findIndex(\r\n              (guild) => guild.guild_id === guild_json.guild_id\r\n            ) + 1\r\n          }\r\n          average_skills_index={\r\n            this.state.sortedOnAverageSkill.findIndex(\r\n              (guild) => guild.guild_id === guild_json.guild_id\r\n            ) + 1\r\n          }\r\n          catacombs={guild_json.average_catacombs}\r\n          capture_date={new TimeDelta(\r\n            guild_json.time_difference\r\n          ).toNiceString()}\r\n          scammers={guild_json.scammers}\r\n          key={guild_json.guild_id}\r\n          color={color}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <table className='text-white bg-primary text-center rounded-md text-[.4em] sm:text-lg mx-auto'>\r\n        <tbody>\r\n          <tr>\r\n            <th>#</th>\r\n            <th></th>\r\n            <th className='tracking-[.1em] text-left'>Guilds</th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('players');\r\n              }}\r\n            >\r\n              Member\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('average_weight');\r\n              }}\r\n            >\r\n              Weight\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('average_skills');\r\n              }}\r\n            >\r\n              Average Skills\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('average_slayer');\r\n              }}\r\n            >\r\n              Slayers\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('average_catacombs');\r\n              }}\r\n            >\r\n              Catacombs\r\n            </th>\r\n            <th>Last updated</th>\r\n          </tr>\r\n          {guilds}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://api.guildleaderboard.com/leaderboard')\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          if (this.state.useMultiplier) {\r\n            result.forEach((guild) => {\r\n              guild.actual_weight = guild.average_weight;\r\n              guild.average_weight =\r\n                guild.average_weight * getMultiplier(guild.players);\r\n            });\r\n          }\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            guildsJson: result,\r\n            sortedOnSlayer: this.sortOn(result, 'average_slayer'),\r\n            sortedOnAverageSkill: this.sortOn(result, 'average_skills'),\r\n            sortedOnCatacombs: this.sortOn(result, 'catacombs'),\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nfunction Home() {\r\n  // scrollbar\r\n  return (\r\n    <div class='bg-secondary min-h-screen space-y-10 pt-7 sm:h-96 overflow-y-auto scrollbar'>\r\n      <NavigationBar />\r\n      <StatsHeader />\r\n      <Guilds />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts'\r\nimport { numberWithCommas } from \"./Functions.js\"\r\n\r\nexport class CustomChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // https://apexcharts.com/docs/options\r\n            options: {\r\n                chart: {\r\n                    id: `${this.props.title}-chart`,\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    animations: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'straight'\r\n                },\r\n                xaxis: {\r\n                    categories: this.props.categories, //[1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n                    labels: {\r\n                        style: {\r\n                            colors: 'white',\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: \"white\",\r\n                        },\r\n                        formatter: numberWithCommas\r\n                    }\r\n                },\r\n                title: {\r\n                    text: this.props.title,\r\n                    align: 'center',\r\n                    style: {\r\n                        fontSize: '24px',\r\n                        color: \"white\"\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                markers: {\r\n                    size: 4,\r\n                }\r\n            },\r\n            series: [{\r\n                name: this.props.title,\r\n                data: this.props.data//[30, 40, 35, 50, 49, 60, 70, 91, 125]\r\n            }]\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"area\"\r\n                width={this.props.width || 500}\r\n                height={this.props.height || 320}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class CustomChart2 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // https://apexcharts.com/docs/options\r\n            options: {\r\n                chart: {\r\n                    id: `mychart`,\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    animations: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'straight'\r\n                },\r\n                xaxis: {\r\n                    // categories: this.props.categories, //[1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999],\r\n                    labels: {\r\n                        style: {\r\n                            colors: 'white',\r\n                        }\r\n                    },\r\n                    type: 'datetime'\r\n                },\r\n                yaxis: {\r\n                    labels: {\r\n                        style: {\r\n                            colors: \"white\",\r\n                        },\r\n                        formatter: numberWithCommas\r\n                    }\r\n                },\r\n                title: {\r\n                    text: this.props.title,\r\n                    align: 'center',\r\n                    style: {\r\n                        fontSize: '24px',\r\n                        color: \"white\"\r\n                    }\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                markers: {\r\n                    size: 4,\r\n                },\r\n                legend: {\r\n                    labels: {\r\n                        colors: 'white',\r\n                    }\r\n                }\r\n            },\r\n            series: this.props.series,\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Chart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"area\"\r\n                width={this.props.width || 500}\r\n                height={this.props.height || 420}\r\n            />\r\n        )\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { TimeDelta, numberWithCommas, getMultiplier } from './Functions.js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Loading, Footer } from './Functions.js';\r\nimport { CustomChart, CustomChart2 } from './Chart.js';\r\nimport { Helmet } from 'react-helmet';\r\nimport { followCursor } from 'tippy.js';\r\nimport Tippy from '@tippyjs/react';\r\nimport 'tippy.js/dist/tippy.css'; // optional\r\nimport ReactTags from 'react-tag-autocomplete';\r\n\r\nconst StatBlockTop = (props) => {\r\n  const element = (\r\n    <div className='inline-block px-1 py-2 text-sm font-normal text-white'>\r\n      <span className='p-2 rounded-l-lg bg-primary'>{`${props.name} `}</span>\r\n      <span className={`${props.color} rounded-r-lg p-2`}>{props.value}</span>\r\n    </div>\r\n  );\r\n  if (props.tippy) {\r\n    return <Tippy content={props.tippy}>{element}</Tippy>;\r\n  } else {\r\n    return element;\r\n  }\r\n};\r\n\r\nconst GuildHeader = (props) => {\r\n  const navigate = useNavigate();\r\n  const backButton = () => {\r\n    navigate(`/`);\r\n  };\r\n\r\n  if (!props.guildJson) {\r\n    return (\r\n      <div className='text-center font-[Helvetica]'>\r\n        <Loading />\r\n        <div class='w-max mx-auto'>\r\n          <button\r\n            onClick={backButton}\r\n            className='flex bg-secondary text-[1.2em] text-center text-gray-200 opacity-60 drop-shadow-lg hover:opacity-75 hover:scale-105 px-3 py-2 rounded-md border border-gray-800'\r\n          >\r\n            <div className='pr-2'>\r\n              <svg\r\n                xmlns='http://www.w3.org/2000/svg'\r\n                class='h-6 w-6'\r\n                fill='none'\r\n                viewBox='0 0 24 24'\r\n                stroke='currentColor'\r\n                strokeWidth='2'\r\n              >\r\n                <path\r\n                  strokeLinecap='round'\r\n                  strokeLinejoin='round'\r\n                  d='M11 17l-5-5m0 0l5-5m-5 5h12'\r\n                />\r\n              </svg>\r\n            </div>\r\n            <div>Back to guild leaderboards</div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  let element;\r\n  if (props.selectedPage === 'players') {\r\n    element = (\r\n      <h1 className='pb-2 text-center text-white sm:text-1xl'>\r\n        Scammer Database provided by{' '}\r\n        <a\r\n          className='text-blue-500 underline'\r\n          href='https://discord.gg/skyblock'\r\n        >\r\n          SkyBlockZ\r\n        </a>\r\n      </h1>\r\n    );\r\n  } else {\r\n    element = '';\r\n  }\r\n  let guild_discord;\r\n  if (props.guildJson.discord != null) {\r\n    guild_discord = (\r\n      <button className='bg-blue-800 text-[1.2em] text-center text-gray-200 drop-shadow-lg opacity-95 hover:opacity-100 hover:scale-105 px-3 py-2 rounded-md border border-gray-800'>\r\n        <i class='fab fa-discord'></i>\r\n        <span className='pl-3'>\r\n          <a href={`https://discord.gg/${props.guildJson.discord}`}>Guild Discord</a>\r\n        </span>\r\n      </button>\r\n    );\r\n  } else {\r\n    guild_discord = (\r\n      <button className='bg-blue-900 text-[1.2em] text-center text-gray-200 drop-shadow-lg opacity-25 px-3 py-2 rounded-md border border-gray-800'>\r\n        <i class='fab fa-discord'></i>\r\n        <span className='pl-3'>\r\n          <a href='https://discord.gg/ej92B474Ej'>Submit Guild Discord</a>\r\n        </span>\r\n      </button>\r\n    );\r\n  }\r\n  return (\r\n    <div className='text-center font-[Helvetica]'>\r\n      <Helmet>\r\n        <meta charSet='utf-8' />\r\n        <meta property='og:title' content={props.guildJson.guild_name} />\r\n        <meta\r\n          property='og:description'\r\n          content={`📚 Avg Skill Level: ${props.guildJson.average_skills}\r\n\t\t\t\t\t\t💪 Average Senither Weight: ${numberWithCommas(props.guildJson.average_weight)}\r\n\t\t\t\t\t\t💀 Average Catacombs: ${props.guildJson.average_catacombs}\r\n\t\t\t\t\t\t🔫 Average Slayer: ${numberWithCommas(props.guildJson.average_slayer)}\r\n\t\t\t\t\t\t👥 Members: ${props.guildJson.players.length}`}\r\n        />\r\n      </Helmet>\r\n      <h1 className='text-[1.8em] sm:text-[3em] font-semibold text-white'>\r\n        {props.guildJson.guild_name}\r\n      </h1>\r\n      <div className='p-2 text-center'>\r\n        <StatBlockTop\r\n          color='bg-purple-700'\r\n          value={numberWithCommas(\r\n            props.guildJson.average_weight *\r\n              getMultiplier(props.guildJson.players.length)\r\n          )}\r\n          name='Weight'\r\n          tippy={`${numberWithCommas(\r\n            props.guildJson.average_weight\r\n          )} Weight with a multiplier of ${numberWithCommas(\r\n            getMultiplier(props.guildJson.players.length)\r\n          )}.`}\r\n        />\r\n        <StatBlockTop\r\n          color='bg-blue-500'\r\n          value={props.guildJson.average_skills}\r\n          name='Skill Average'\r\n        />\r\n        <StatBlockTop\r\n          color='bg-green-500'\r\n          value={props.guildJson.average_catacombs}\r\n          name='Catacombs'\r\n        />\r\n        <StatBlockTop\r\n          color='bg-red-500'\r\n          value={numberWithCommas(props.guildJson.average_slayer)}\r\n          name='Slayer'\r\n        />\r\n        <StatBlockTop\r\n          color='bg-yellow-500'\r\n          value={props.guildJson.players.length}\r\n          name='Members'\r\n        />\r\n      </div>\r\n      <div className='py-2'>{guild_discord}</div>\r\n      {element}\r\n      <div class='w-max mx-auto'>\r\n        <button\r\n          onClick={backButton}\r\n          className='flex bg-secondary text-[1.2em] text-center text-gray-200 opacity-60 drop-shadow-lg hover:opacity-75 hover:scale-105 px-3 py-2 rounded-md border border-gray-800'\r\n        >\r\n          <div class='pr-2'>\r\n            <svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              class='h-6 w-6'\r\n              fill='none'\r\n              viewBox='0 0 24 24'\r\n              stroke='currentColor'\r\n              strokeWidth='2'\r\n            >\r\n              <path\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                d='M11 17l-5-5m0 0l5-5m-5 5h12'\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div>Back to guild leaderboards</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Player = (props) => {\r\n  let player_data = props.player_data;\r\n\r\n  const ref = useRef();\r\n\r\n  let element;\r\n  let dropdown;\r\n\r\n  dropdown = (\r\n    <Tippy\r\n      reference={ref}\r\n      interactive={true}\r\n      appendTo={document.body}\r\n      theme={'white'}\r\n      hideOnClick={true}\r\n      trigger={'click'}\r\n      content={\r\n        <div className='p-5'>\r\n          <div className='pb-3 text-lg font-bold'>\r\n            {`${props.player_data.name}`}'s external links:{' '}\r\n          </div>\r\n          <div class='grid grid-rows-3 grid-flow-col gap-2 text-[1em]'>\r\n            <div>\r\n              <button\r\n                className='px-3 py-1 font-semibold text-green-600 bg-green-500 border-green-500 rounded-md hover:opacity-[75%] hover:border-green-700'\r\n                onClick={() =>\r\n                  window.open(\r\n                    `https://sky.shiiyu.moe/${props.player_data.name}`\r\n                  )\r\n                }\r\n              >\r\n                SkyCrypt\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className='px-3 py-1 font-semibold text-orange-700 bg-orange-600 border-orange-600 rounded-md hover:opacity-[75%] hover:border-orange-700'\r\n                onClick={() =>\r\n                  window.open(\r\n                    `https://plancke.io/hypixel/player/stats/${props.player_data.name}`\r\n                  )\r\n                }\r\n              >\r\n                Plancke\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <button\r\n                className='px-3 py-1 font-semibold text-gray-700 bg-gray-600 border-gray-600 rounded-md hover:opacity-[75%] hover:border-gray-700'\r\n                onClick={() =>\r\n                  window.open(\r\n                    `https://auctions.craftlink.xyz/players/${props.player_data.name}`\r\n                  )\r\n                }\r\n              >\r\n                Hyauctions\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n  if (player_data.scam_reason) {\r\n    element = (\r\n      <Tippy\r\n        reference={ref}\r\n        theme='tomato'\r\n        interactive={true}\r\n        appendTo={document.body}\r\n        followCursor='horizontal'\r\n        plugins={[followCursor]}\r\n        content={\r\n          <>\r\n            <div>{player_data.scam_reason}</div>\r\n            <div>\r\n              Scammer Database by{' '}\r\n              <a\r\n                className='text-blue-500 underline'\r\n                href='https://discord.gg/skyblock'\r\n              >\r\n                SkyBlockZ\r\n              </a>\r\n            </div>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  } else {\r\n    element = '';\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr\r\n        className={`${props.color} font-[Helvetica] hover:opacity-60 hover:cursor-pointer`}\r\n        ref={ref}\r\n      >\r\n        <th className='px-1 sm:px-4'>{props.position}</th>\r\n        <th className='pr-1'>\r\n          <img\r\n            src={`https://mc-heads.net/avatar/${player_data.name}`}\r\n            alt=''\r\n            className='w-3 sm:w-8'\r\n          />\r\n        </th>\r\n        <th className='pr-[2em] text-left'>{player_data.name}</th>\r\n        <th>\r\n          <span className='px-2 font-normal bg-purple-700 rounded-md'>\r\n            {numberWithCommas(player_data.weight)}\r\n          </span>\r\n        </th>\r\n        <th>\r\n          <span className='px-2 font-normal bg-blue-500 rounded-md'>\r\n            {player_data.average_skill}\r\n          </span>\r\n        </th>\r\n        <th>\r\n          <span className='px-2 font-normal bg-red-500 rounded-md'>\r\n            {numberWithCommas(Math.round(player_data.total_slayer))}\r\n          </span>\r\n        </th>\r\n        <th>\r\n          <span className='px-2 font-normal bg-green-400 rounded-md'>\r\n            {player_data.catacomb}\r\n          </span>\r\n        </th>\r\n        <th className='sm:px-5'>\r\n          {new TimeDelta(player_data.time_difference).toNiceString()}\r\n        </th>\r\n        <th></th>\r\n      </tr>\r\n      {element}\r\n      {dropdown}\r\n    </>\r\n  );\r\n};\r\n\r\nclass Players extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortOn: 'weight',\r\n      sortReversed: false,\r\n    };\r\n  }\r\n\r\n  onSortClick(sortOn) {\r\n    if (this.state.sortOn === sortOn) {\r\n      this.setState({\r\n        sortReversed: !this.state.sortReversed,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sortOn: sortOn,\r\n        sortReversed: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.guildJson) {\r\n      return <Loading />;\r\n    }\r\n    let players_data = this.props.guildJson.players.slice();\r\n    let sortOn = this.state.sortOn;\r\n    let sortReversed = this.state.sortReversed;\r\n    let players = [];\r\n\r\n    players_data.sort(function (a, b) {\r\n      if (sortReversed === true) {\r\n        return a[sortOn] - b[sortOn];\r\n      } else {\r\n        return b[sortOn] - a[sortOn];\r\n      }\r\n    });\r\n\r\n    for (const i in players_data) {\r\n      let player_data = players_data[i];\r\n      let color = i % 2 === 0 ? 'bg-tertiary' : '';\r\n      if (player_data.scam_reason) {\r\n        color = 'bg-scamred';\r\n      }\r\n      players.push(\r\n        <Player\r\n          key={player_data.uuid}\r\n          player_data={player_data}\r\n          position={parseInt(i) + 1}\r\n          color={color}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <table className='text-white bg-primary text-center rounded-md text-[.45em] overflow-x-auto sm:text-lg mx-auto'>\r\n        <tbody>\r\n          <tr>\r\n            <th>#</th>\r\n            <th></th>\r\n            <th className='text-left'>Name</th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('weight');\r\n              }}\r\n            >\r\n              Weight\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('average_skill');\r\n              }}\r\n            >\r\n              Average Skills\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('total_slayer');\r\n              }}\r\n            >\r\n              Slayers\r\n            </th>\r\n            <th\r\n              className='hover:cursor-pointer'\r\n              onClick={() => {\r\n                this.onSortClick('catacomb');\r\n              }}\r\n            >\r\n              Catacombs\r\n            </th>\r\n            <th>Last updated</th>\r\n          </tr>\r\n          {players}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n\r\nclass Metrics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n    };\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.isLoaded) {\r\n      return <Loading />;\r\n    }\r\n    let categories = this.props.categories;\r\n    let guild_sorted_data = this.props.guild_sorted_data;\r\n    let inline;\r\n    if (window.screen.width <= 800) {\r\n      inline = '';\r\n    } else {\r\n      inline = 'inline-block w-1/3';\r\n    }\r\n    return (\r\n      <div>\r\n        <div class='text-center'>\r\n          <div className={`${inline} bg-primary rounded-md m-2`}>\r\n            <CustomChart\r\n              categories={categories}\r\n              data={guild_sorted_data.average_weight.data}\r\n              title={'Average Weight'}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n          <div className={`${inline} bg-primary rounded-md m-2`}>\r\n            <CustomChart\r\n              categories={categories}\r\n              data={guild_sorted_data.average_skills.data}\r\n              title={'Average Skills'}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class='text-center'>\r\n          <div className={`${inline} bg-primary rounded-md m-2`}>\r\n            <CustomChart\r\n              categories={categories}\r\n              data={guild_sorted_data.average_catacombs.data}\r\n              title={'Average Catacombs'}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n          <div className={`${inline} bg-primary rounded-md m-2`}>\r\n            <CustomChart\r\n              categories={categories}\r\n              data={guild_sorted_data.average_slayer.data}\r\n              title={'Average Slayer'}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class='text-center'>\r\n          <div className={`${inline} bg-primary rounded-md m-2`}>\r\n            <CustomChart\r\n              categories={categories}\r\n              data={guild_sorted_data.member_count.data}\r\n              title={'Members'}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n}\r\n\r\nclass JoinLog extends React.Component {\r\n  render() {\r\n    let color;\r\n    if (this.props.type === 'Joined') {\r\n      color = 'bg-green-500';\r\n    } else {\r\n      color = 'bg-red-500';\r\n    }\r\n    return (\r\n      <div className='bg-tertiary p-2 inline text-white text-[0.6rem] md:text-xl rounded-md'>\r\n        <div className='inline-block w-2/3 text-left lg:w-1/2'>\r\n          <p\r\n            className={`inline-block ${color} mr-1 my-2 py-0.5 px-2 rounded-lg `}\r\n          >\r\n            {this.props.type}\r\n          </p>\r\n          <p className='inline-block'>{this.props.name}</p>\r\n        </div>\r\n        <div className='inline-block justify-end text-right rounded-xl py-0.5 px-2'>\r\n          {this.props.time_difference.toNiceStringWDays().toString()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass JoinLogs extends React.Component {\r\n  render() {\r\n    if (!this.props.guildJson) {\r\n      return <Loading />;\r\n    }\r\n\r\n    let logsElements = [];\r\n    // loop through guild json\r\n    for (const i in this.props.guildJson) {\r\n      let log = this.props.guildJson[i];\r\n      let time_difference = new TimeDelta(log.date);\r\n      for (const i in log.joined) {\r\n        let name = log.joined[i];\r\n        logsElements.push(\r\n          <JoinLog\r\n            key={`${name}:${log.date}`}\r\n            type={'Joined'}\r\n            name={name}\r\n            time_difference={time_difference}\r\n          />\r\n        );\r\n      }\r\n      for (const i in log.left) {\r\n        let name = log.left[i];\r\n        logsElements.push(\r\n          <JoinLog\r\n            key={`${name}:${log.date}`}\r\n            type={'Left'}\r\n            name={name}\r\n            time_difference={time_difference}\r\n          />\r\n        );\r\n      }\r\n    }\r\n\r\n    return <div className='text-center'>{logsElements}</div>;\r\n  }\r\n}\r\n\r\n// function TagComponent ({ tag, removeButtonText, onDelete }) {\r\n//   return (\r\n//     <button className=\"bg-tertiary rounded-md px-1 py-0.5 m-0.5 hover:opacity-60 text-white\" type='button' title={`${removeButtonText}: ${tag.name}`} onClick={onDelete}>\r\n//       {tag.name}\r\n//     </button>\r\n//   )\r\n// }\r\n\r\nclass CompareGuilds extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: 0,\r\n      height: 0,\r\n      tags: [],\r\n      suggestions: [],\r\n      all_series: {},\r\n      autoCompleteLoaded: false,\r\n      change: 0,\r\n    };\r\n    this.reactTags = React.createRef();\r\n  }\r\n\r\n  onDelete(i) {\r\n    const tags = this.state.tags.slice(0);\r\n    let guild_id = tags.splice(i, 1)[0].id;\r\n    // remove guild from guild_sorted_data\r\n    let all_series = this.state.all_series;\r\n    delete all_series[guild_id];\r\n    this.setState({\r\n      tags: tags,\r\n      all_series: all_series,\r\n      change: this.state.change + 1,\r\n    });\r\n  }\r\n\r\n  onAddition(tag) {\r\n    const tags = [].concat(this.state.tags, tag);\r\n    let guildid = tag.id;\r\n\r\n    fetch(`https://api.guildleaderboard.com/metrics/${guildid}?format=true`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          let all_series = this.state.all_series;\r\n          all_series[guildid] = result;\r\n          this.setState({\r\n            tags: tags,\r\n            all_series: all_series,\r\n            change: this.state.change + 1,\r\n          });\r\n\r\n          // this.addGuildMetrics(result)\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            metricsIsLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  getSeries(wanted_key) {\r\n    let return_data = [];\r\n    for (let key in this.state.all_series) {\r\n      this.state.all_series[key][wanted_key].data.forEach(function (item) {\r\n        if (typeof item[0] === 'string') {\r\n          let time_difference = new TimeDelta(item[0]);\r\n          item[0] = Date.now() - time_difference.toMS();\r\n        }\r\n      });\r\n\r\n      return_data.push(this.state.all_series[key][wanted_key]);\r\n    }\r\n    return return_data;\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLoaded || !this.state.all_series) {\r\n      return <Loading />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className='text-center'>\r\n          <div className='inline-block p-1 w-[90%] md:w-2/3 text-left mb-20'>\r\n            <ReactTags\r\n              ref={this.reactTags}\r\n              tags={this.state.tags}\r\n              suggestions={this.state.suggestions}\r\n              noSuggestionsText='No matching guilds found'\r\n              onDelete={this.onDelete.bind(this)}\r\n              onAddition={this.onAddition.bind(this)}\r\n              placeholderText='Add a guild'\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className='text-center'>\r\n          <div className='p-4 m-2 rounded-md md:inline-block md:w-2/3 bg-primary'>\r\n            <CustomChart2\r\n              series={this.getSeries('average_weight_data')}\r\n              title={'Average Weight'}\r\n              width={'100%'}\r\n              key={this.state.change}\r\n            />\r\n          </div>\r\n          <div className='p-2 m-2 rounded-md md:inline-block md:w-2/3 bg-primary'>\r\n            <CustomChart2\r\n              series={this.getSeries('average_skills_data')}\r\n              title={'Average Skills'}\r\n              width={'100%'}\r\n              key={this.state.change}\r\n            />\r\n          </div>\r\n          <div className='m-2 rounded-md md:inline-block md:w-2/3 bg-primary'>\r\n            <CustomChart2\r\n              series={this.getSeries('average_catacombs_data')}\r\n              title={'Average Catacombs'}\r\n              width={'100%'}\r\n              key={this.state.change}\r\n            />\r\n          </div>\r\n          <div className='m-2 rounded-md md:inline-block md:w-2/3 bg-primary'>\r\n            <CustomChart2\r\n              series={this.getSeries('average_slayer_data')}\r\n              title={'Average Slayer'}\r\n              width={'100%'}\r\n              key={this.state.change}\r\n            />\r\n          </div>\r\n          <div className='m-2 rounded-md md:inline-block md:w-2/3 bg-primary'>\r\n            <CustomChart2\r\n              series={this.getSeries('member_count_data')}\r\n              title={'Members'}\r\n              width={'100%'}\r\n              key={this.state.change}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  updateDimensions = () => {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('resize', this.updateDimensions);\r\n    this.onAddition({ id: this.props.guild_id, name: this.props.guild_name });\r\n    fetch(`https://api.guildleaderboard.com/autocomplete`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            autoCompleteLoaded: true,\r\n            suggestions: result,\r\n          });\r\n          if (result === null) {\r\n            window.location.href = '/';\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            autoCompleteLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n}\r\nclass Guild extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      playerGuildJson: null,\r\n      playersIsLoaded: false,\r\n      selectedPage: 'players',\r\n\r\n      metricsGuildJson: null,\r\n      metricsIsLoaded: false,\r\n      guild_sorted_data: {\r\n        average_weight: {\r\n          data: [],\r\n        },\r\n        average_skills: {\r\n          data: [],\r\n        },\r\n        average_catacombs: {\r\n          data: [],\r\n        },\r\n        average_slayer: {\r\n          data: [],\r\n        },\r\n        member_count: {\r\n          data: [],\r\n        },\r\n      },\r\n      categories: [],\r\n\r\n      historyGuildJson: null,\r\n      historyIsLoaded: false,\r\n    };\r\n  }\r\n  handleSwitchClick(selected) {\r\n    this.setState({\r\n      selectedPage: selected,\r\n    });\r\n  }\r\n\r\n  renderComponent() {\r\n    if (this.state.selectedPage === 'players') {\r\n      return <Players guildJson={this.state.playerGuildJson} />;\r\n    } else if (this.state.selectedPage === 'metrics') {\r\n      if (!this.state.metricsIsLoaded) {\r\n        this.loadMetrics();\r\n      }\r\n      return (\r\n        <Metrics\r\n          guild_sorted_data={this.state.guild_sorted_data}\r\n          categories={this.state.categories}\r\n          isLoaded={this.state.metricsIsLoaded}\r\n        />\r\n      );\r\n    } else if (this.state.selectedPage === 'history') {\r\n      if (!this.state.historyIsLoaded) {\r\n        this.loadHistory();\r\n      }\r\n      return <JoinLogs guildJson={this.state.historyGuildJson} />;\r\n    } else if (this.state.selectedPage === 'compare') {\r\n      if (!this.state.metricsIsLoaded) {\r\n        this.loadMetrics();\r\n      }\r\n      return (\r\n        <CompareGuilds\r\n          metricsGuildJson={this.state.metricsGuildJson}\r\n          isLoaded={this.state.metricsIsLoaded}\r\n          guild_id={this.state.playerGuildJson.guild_id}\r\n          guild_name={this.state.playerGuildJson.guild_name}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='min-h-screen space-y-10 overflow-y-auto bg-secondary pt-7 sm:h-96 scrollbar'>\r\n        <GuildHeader\r\n          guildJson={this.state.playerGuildJson}\r\n          selectedPage={this.state.selectedPage}\r\n        />\r\n        <div className='text-center font-[Helvetica]'>\r\n          <div className='inline-block p-1'>\r\n            <button\r\n              className='bg-primary text-[1.2em] text-gray-200 opacity-60 drop-shadow-lg enabled:hover:opacity-75 enabled:hover:scale-105 px-3 py-2 rounded-md border border-gray-800 disabled:bg-tertiary disabled:scale-95'\r\n              onClick={(i) => this.handleSwitchClick('players')}\r\n              disabled={this.state.selectedPage === 'players'}\r\n            >\r\n              {'Show Players'}\r\n            </button>\r\n          </div>\r\n          <div className='inline-block p-1'>\r\n            <button\r\n              className='bg-primary text-[1.2em] text-gray-200 opacity-60 drop-shadow-lg enabled:hover:opacity-75 enabled:hover:scale-105 px-3 py-2 rounded-md border border-gray-800 disabled:bg-tertiary disabled:scale-95'\r\n              onClick={(i) => this.handleSwitchClick('metrics')}\r\n              disabled={this.state.selectedPage === 'metrics'}\r\n            >\r\n              {'Show Metrics'}\r\n            </button>\r\n          </div>\r\n          <div className='inline-block p-1'>\r\n            <button\r\n              className='bg-primary text-[1.2em] text-gray-200 opacity-60 drop-shadow-lg enabled:hover:opacity-75 enabled:hover:scale-105 px-3 py-2 rounded-md border border-gray-800 disabled:bg-tertiary disabled:scale-95'\r\n              onClick={(i) => this.handleSwitchClick('history')}\r\n              disabled={this.state.selectedPage === 'history'}\r\n            >\r\n              {'View History'}\r\n            </button>\r\n          </div>\r\n          <div className='inline-block p-1'>\r\n            <button\r\n              className='bg-primary text-[1.2em] text-gray-200 opacity-60 drop-shadow-lg enabled:hover:opacity-75 enabled:hover:scale-105 px-3 py-2 rounded-md border border-gray-800 disabled:bg-tertiary disabled:scale-95'\r\n              onClick={(i) => this.handleSwitchClick('compare')}\r\n              disabled={this.state.selectedPage === 'compare'}\r\n            >\r\n              {'Compare Guild'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {this.renderComponent()}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  loadMetrics() {\r\n    let paths = window.location.href.split('/');\r\n    let guildid = paths[paths.length - 1];\r\n\r\n    fetch(`https://api.guildleaderboard.com/metrics/${guildid}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          let guild_metrics = result;\r\n\r\n          let categories = [];\r\n          let guild_sorted_data = this.state.guild_sorted_data;\r\n\r\n          for (const i in guild_metrics) {\r\n            let guild_metric = guild_metrics[i];\r\n            let time_difference = new TimeDelta(guild_metric.time_difference);\r\n            let timestamp = new Date(Date.now() - time_difference.toMS());\r\n            categories.push(\r\n              `${timestamp.getDate()} ${timestamp.toLocaleString('default', {\r\n                month: 'short',\r\n              })}`\r\n            );\r\n\r\n            guild_sorted_data.average_weight.data.push(\r\n              guild_metric.average_weight\r\n            );\r\n            guild_sorted_data.average_skills.data.push(\r\n              guild_metric.average_skills\r\n            );\r\n            guild_sorted_data.average_catacombs.data.push(\r\n              guild_metric.average_catacombs\r\n            );\r\n            guild_sorted_data.average_slayer.data.push(\r\n              guild_metric.average_slayer\r\n            );\r\n            guild_sorted_data.member_count.data.push(guild_metric.member_count);\r\n          }\r\n          this.setState({\r\n            metricsIsLoaded: true,\r\n            metricsGuildJson: guild_metrics,\r\n            guild_sorted_data: guild_sorted_data,\r\n            categories: categories,\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            metricsIsLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  loadHistory() {\r\n    let paths = window.location.href.split('/');\r\n    let guildid = paths[paths.length - 1];\r\n\r\n    fetch(`https://api.guildleaderboard.com/history/${guildid}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            historyIsLoaded: true,\r\n            historyGuildJson: result,\r\n          });\r\n          if (result === null) {\r\n            window.location.href = '/';\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            historyIsLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let paths = window.location.href.split('/');\r\n    let guildid = paths[paths.length - 1];\r\n\r\n    fetch(`https://api.guildleaderboard.com/guild/${guildid}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            playersIsLoaded: true,\r\n            playerGuildJson: result,\r\n          });\r\n          if (result === null) {\r\n            window.location.href = '/';\r\n          }\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            playersIsLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n}\r\n\r\nexport default Guild;\r\n","import Home from './Home';\r\nimport Guild from './Guild';\r\nimport React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n    return (\r\n        <Routes>\r\n            <Route path='/' element={<Home />}></Route>\r\n            <Route path=\"/guild/:guildId\" element={<Guild />}></Route>\r\n            <Route path='*' element={<Home />}></Route>            \r\n        </Routes>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <HashRouter >\r\n    <App />\r\n  </HashRouter >\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}